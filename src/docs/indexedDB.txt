/src/components/services/IndexedDBFileSystem.js

/**
 * 读取文件内容
 * @param {string} path - 文件路径，格式为 /data/{title}/path/to/file
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<any>} 文件内容
 * @throws {Error} 如果路径是文件夹或文件不存在
 */
export async function readFile(path: string, forceRefresh?: boolean, retryCount?: number): Promise<any>

/**
 * 写入文件内容
 * @param {string} path - 文件路径，格式为 /data/{title}/path/to/file
 * @param {any} data - 文件内容
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<void>}
 * @throws {Error} 如果路径是文件夹
 */
export async function writeFile(path: string, data: any, forceRefresh?: boolean, retryCount?: number): Promise<void>

/**
 * 删除文件或文件夹
 * @param {string} path - 文件或文件夹路径，格式为 /data/{title}/path/to/file_or_folder
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<void>}
 * @throws {Error} 如果路径是根目录
 */
export async function deletePath(path: string, forceRefresh?: boolean, retryCount?: number): Promise<void>

/**
 * 重命名文件或文件夹
 * @param {string} oldPath - 旧路径，格式为 /data/{title}/path/to/file_or_folder
 * @param {string} newName - 新名称（不是完整路径，只是名称）
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<void>}
 * @throws {Error} 如果路径是根目录或新名称格式无效
 */
export async function renamePath(oldPath: string, newName: string, forceRefresh?: boolean, retryCount?: number): Promise<void>

/**
 * 列出目录下的所有文件和文件夹
 * @param {string} path - 目录路径，格式为 /data/{title}/path/to/folder
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<Array<{name: string, isFolder: boolean, path: string}>>} 文件和文件夹信息列表
 */
export async function listDirectory(path: string, forceRefresh?: boolean, retryCount?: number): Promise<Array<{ name: string; isFolder: boolean; path: string }>>

/**
 * 获取文件或文件夹的元信息
 * @param {string} path - 文件或文件夹路径，格式为 /data/{title}/path/to/file_or_folder
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<{exists: boolean, isFolder: boolean, size?: number, lastModified?: number}>} 元信息
 */
export async function getMetadata(path: string, forceRefresh?: boolean, retryCount?: number): Promise<{ exists: boolean; isFolder: boolean; size?: number; lastModified?: number }>

/**
 * 获取所有可用的标题（存储名）
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<string[]>} 标题列表
 */
export async function getAllTitles(forceRefresh?: boolean, retryCount?: number): Promise<string[]>

/**
 * 创建文件夹
 * @param {string} path - 文件夹路径，格式为 /data/{title}/path/to/folder
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<void>}
 */
export async function createFolder(path: string, forceRefresh?: boolean, retryCount?: number): Promise<void>

/**
 * 获取某个标题下的所有数据
 * @param {string} title - 标题/存储名
 * @param {boolean} [forceRefresh=false] - 是否强制刷新版本号，默认为 false
 * @param {number} [retryCount=0] - 当前重试次数，默认为 0
 * @returns {Promise<Object>} 包含所有键值对的对象
 */
export async function getAllData(title: string, forceRefresh?: boolean, retryCount?: number): Promise<Object>